// Generated by CoffeeScript 1.8.0
var Ball, Game, Rect, game;

Rect = (function() {
  function Rect(context, color, x, y, width, height) {
    this.context = context;
    this.color = color;
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
  }

  Rect.prototype.draw = function() {
    this.context.fillStyle = this.color;
    return this.context.fillRect(this.x, this.y, this.width, this.height);
  };

  return Rect;

})();

Ball = (function() {
  function Ball(context, color, x, y, radius) {
    this.context = context;
    this.color = color;
    this.x = x;
    this.y = y;
    this.radius = radius;
  }

  Ball.prototype.draw = function() {
    this.context.beginPath();
    this.context.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
    this.context.stroke();
    this.context.fillStyle = this.color;
    return this.context.fill();
  };

  Ball.prototype.move = function(dx, dy) {
    this.x = this.x + dx;
    return this.y = this.y + dy;
  };

  return Ball;

})();

Game = (function() {
  function Game() {}

  Game.prototype.init = function() {
    var canvas;
    canvas = document.getElementById("ballpool");
    canvas.width = 800;
    canvas.height = 600;
    this.context = canvas.getContext("2d");
    this.simpleBall = new Ball(this.context, "#FF0000", 100, 100, 10);
    return this.gameField = new Rect(this.context, "#AAAAAA", 0, 0, 800, 600);
  };

  Game.prototype.draw = function() {
    this.gameField.draw();
    return this.simpleBall.draw();
  };

  Game.prototype.update = function() {
    this.context.clearRect(0, 0, 800, 600);
    this.updatePosition();
    return this.draw();
  };

  Game.prototype.animate = function() {
    var animation;
    return animation = function() {
      this.update();
      return setTimeout(animation(1000));
    };
  };

  Game.prototype.updatePosition = function() {
    return this.simpleBall.move(3, 3);
  };

  return Game;

})();

game = new Game();
